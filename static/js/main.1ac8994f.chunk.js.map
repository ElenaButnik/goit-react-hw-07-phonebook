{"version":3,"sources":["components/Contacts/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/operations.js","redux/contacts/selectors.js","components/Forms/Form.js","components/Contacts/ContactList.js","redux/contacts/actions.js","components/Filter/Filter.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/Forms/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","getThunkData","createAsyncThunk","_","a","rejectWithValue","get","data","addThunkData","contact","post","deleteThunkData","contactID","delete","id","getContacts","state","contacts","getFilter","filter","getFilterContacts","createSelector","name","toLowerCase","includes","Form","useState","userName","setName","userNumber","setNumber","prodIdName","uuidv4","prodIdNumber","dispatch","useDispatch","useSelector","handleChange","event","target","value","reset","className","s","form","onSubmit","preventDefault","find","alert","newContacts","number","label","htmlFor","input","type","pattern","title","required","onChange","button","ContactList","useEffect","list","map","list__item","onClick","changeFilter","createAction","Filter","e","currentTarget","App","contactSlice","createSlice","initialState","loading","error","extraReducers","pending","fulfilled","action","payload","rejected","contactFilter","createReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ac8994f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3al9f\",\"list__item\":\"ContactList_list__item__27wiv\",\"button\":\"ContactList_button__1xrmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__GkC8A\",\"input\":\"Filter_input__2VAUG\"};","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://61a1187a6c3b400017e69bf3.mockapi.io\";\n\nexport const getThunkData = createAsyncThunk(\n  \"getContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addThunkData = createAsyncThunk(\n  \"addContacts\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteThunkData = createAsyncThunk(\n  \"deleteContacts\",\n  async (contactID, { rejectWithValue }) => {\n    try {\n      const {\n        data: { id },\n      } = await axios.delete(`/contacts/${contactID}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.contact;\nexport const getFilter = (state) => state.filter;\n\nexport const getFilterContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"../Forms/Form.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addThunkData } from \"../../redux/contacts/operations\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\nexport default function Form() {\n  const [userName, setName] = useState(\"\");\n  const [userNumber, setNumber] = useState(\"\");\n  const prodIdName = uuidv4();\n  const prodIdNumber = uuidv4();\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"userName\":\n        setName(value);\n        break;\n\n      case \"userNumber\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (contacts.find((contact) => contact.name === userName)) {\n      alert(`${userName} is already in contacts`);\n      reset();\n      return;\n    }\n    const newContacts = {\n      name: userName,\n      number: userNumber,\n      id: uuidv4(),\n    };\n\n    dispatch(addThunkData(newContacts));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={prodIdName}>\n          Name\n        </label>\n        <input\n          className={s.input}\n          id={prodIdName}\n          type=\"text\"\n          name=\"userName\"\n          value={userName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n\n        <label className={s.label} htmlFor={prodIdNumber}>\n          Number\n        </label>\n        <input\n          className={s.input}\n          id={prodIdNumber}\n          type=\"tel\"\n          name=\"userNumber\"\n          value={userNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport s from \"../Contacts/ContactList.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getThunkData, deleteThunkData } from \"../../redux/contacts/operations\";\nimport { getFilterContacts } from \"../../redux/contacts/selectors\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilterContacts);\n\n  useEffect(() => {\n    dispatch(getThunkData());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.list__item} key={id}>\n          {name} : {number}\n          <button\n            className={s.button}\n            onClick={() => dispatch(deleteThunkData(id))}\n            type=\"button\"\n            id={id}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"changeFilter\");\n","import s from \"../Filter/Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/actions\";\nimport { getFilter } from \"../../redux/contacts/selectors\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  return (\n    <>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={(e) => {\n          dispatch(changeFilter(e.currentTarget.value));\n        }}\n      ></input>\n    </>\n  );\n}\n","import \"./App.css\";\nimport Form from \"./components/Forms/Form\";\nimport ContactList from \"./components/Contacts/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, createSlice } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nimport { getThunkData, addThunkData, deleteThunkData } from \"./operations\";\n\nexport const contactSlice = createSlice({\n  name: \"contacts\",\n  initialState: { contact: [], loading: false, error: null },\n  extraReducers: {\n    [getThunkData.pending]: (state) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [getThunkData.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        contact: action.payload,\n        loading: false,\n      };\n    },\n    [getThunkData.rejected]: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    },\n\n    [addThunkData.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [addThunkData.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        contact: [action.payload, ...state.contact],\n        loading: false,\n      };\n    },\n    [addThunkData.rejected]: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    },\n\n    [deleteThunkData.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [deleteThunkData.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        contact: state.contact.filter(({ id }) => id !== action.payload),\n        loading: false,\n      };\n    },\n    [deleteThunkData.rejected]: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    },\n  },\n});\n\nexport default contactSlice.reducer;\n\nexport const contactFilter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport contactSlice, { contactFilter } from \"./contacts/reducers\";\nimport logger from \"redux-logger\";\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactSlice,\n    filter: contactFilter,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2m88K\",\"button\":\"Form_button__A1L4H\",\"label\":\"Form_label__qENQy\",\"input\":\"Form_input__27BKL\"};"],"sourceRoot":""}