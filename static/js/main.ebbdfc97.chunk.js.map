{"version":3,"sources":["components/Contacts/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/operations.js","redux/contacts/selectors.js","components/Forms/Form.js","components/Contacts/ContactList.js","redux/contacts/actions.js","components/Filter/Filter.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/Forms/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","getThunkData","createAsyncThunk","_","a","rejectWithValue","get","contacts","addThunkData","contact","post","deleteThunkData","contactID","delete","id","data","getContacts","state","getFilter","filter","getFilterContacts","createSelector","name","toLowerCase","includes","Form","useState","userName","setName","userNumber","setNumber","prodIdName","uuidv4","prodIdNumber","dispatch","useDispatch","useSelector","handleChange","event","target","value","reset","className","s","form","onSubmit","preventDefault","find","alert","newContacts","number","label","htmlFor","input","type","pattern","title","required","onChange","button","ContactList","useEffect","list","map","list__item","onClick","changeFilter","createAction","Filter","e","currentTarget","App","contactSlice","createSlice","initialState","loading","error","extraReducers","pending","fulfilled","action","payload","rejected","contactFilter","createReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebbdfc97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3al9f\",\"list__item\":\"ContactList_list__item__27wiv\",\"button\":\"ContactList_button__1xrmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__GkC8A\",\"input\":\"Filter_input__2VAUG\"};","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n///import * as contactsActions from \"./actions\";\r\n//import * as ContactsAPI from \"../../services/ContactsAPI\";\r\n\r\naxios.defaults.baseURL = \"https://61a1187a6c3b400017e69bf3.mockapi.io\";\r\n\r\n// export const getData = () => async (dispatch) => {\r\n//   dispatch(contactsActions.getContactsRequest());\r\n\r\n//   try {\r\n//     const contacts = await ContactsAPI.fetchContacts();\r\n//     dispatch(contactsActions.getContactsSuccess());\r\n//   } catch (error) {\r\n//     dispatch(contactsActions.getContactsError(error));\r\n//   }\r\n// };\r\n\r\nexport const getThunkData = createAsyncThunk(\r\n  \"getContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const  contacts  = await axios.get(`/contacts`);\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addThunkData = createAsyncThunk(\r\n  \"addContacts\",\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const contacts  = await axios.post(`/contacts`, contact);\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteThunkData = createAsyncThunk(\r\n  \"deleteContacts\",\r\n  async (contactID, { rejectWithValue }) => {\r\n    try {\r\n      const {\r\n        data: { id },\r\n      } = await axios.delete(`/contacts/${contactID}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.contact;\r\nexport const getFilter = (state) => state.filter;\r\n\r\nexport const getFilterContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"../Forms/Form.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addThunkData } from \"../../redux/contacts/operations\";\r\nimport { getContacts } from \"../../redux/contacts/selectors\";\r\nexport default function Form() {\r\n  const [userName, setName] = useState(\"\");\r\n  const [userNumber, setNumber] = useState(\"\");\r\n  const prodIdName = uuidv4();\r\n  const prodIdNumber = uuidv4();\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  // const [contacts, setContacts] = useState(() => {\r\n  //   return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case \"userName\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"userNumber\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (contacts.find((contact) => contact.name === userName)) {\r\n      alert(`${userName} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    const newContacts = {\r\n      name: userName,\r\n      number: userNumber,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    dispatch(addThunkData(newContacts));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label} htmlFor={prodIdName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          id={prodIdName}\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label className={s.label} htmlFor={prodIdNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          id={prodIdNumber}\r\n          type=\"tel\"\r\n          name=\"userNumber\"\r\n          value={userNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport s from \"../Contacts/ContactList.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { deleteContact } from \"../../redux/contacts/actions\";\r\nimport { getThunkData, deleteThunkData } from \"../../redux/contacts/operations\";\r\nimport { getFilterContacts, getContacts } from \"../../redux/contacts/selectors\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\nconst contacts = useSelector(getFilterContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(getThunkData());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.list__item} key={id}>\r\n          {name} : {number}\r\n          <button\r\n            className={s.button}\r\n            onClick={() => dispatch(deleteThunkData(id))}\r\n            type=\"button\"\r\n            id={id}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"," import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n export const changeFilter = createAction('changeFilter')\r\n\r\n","import s from \"../Filter/Filter.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/actions\";\r\nimport { getFilter } from \"../../redux/contacts/selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}>Find contacts by name</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => {\r\n          dispatch(changeFilter(e.currentTarget.value));\r\n        }}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Form from \"./components/Forms/Form\";\nimport ContactList from \"./components/Contacts/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, createSlice } from \"@reduxjs/toolkit\";\r\nimport {changeFilter} from './actions';\r\n//import * as contactsActions from \"./actions\";\r\nimport { getThunkData, addThunkData, deleteThunkData } from \"./operations\";\r\n\r\nexport const contactSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: { contact: [], loading: false, error: null },\r\n  extraReducers: {\r\n    [getThunkData.pending]: (state) => {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    },\r\n    [getThunkData.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        contact: action.payload,\r\n        //  [...state.contact, ...action.payload],\r\n         loading: false,\r\n      };\r\n    },\r\n    [getThunkData.rejected]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    },\r\n\r\n    [addThunkData.pending]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    },\r\n    [addThunkData.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        contact: [...state.contact, ...action.payload],\r\n        loading: false,\r\n      };\r\n    },\r\n    [addThunkData.rejected]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    },\r\n\r\n    [deleteThunkData.pending]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    },\r\n    [deleteThunkData.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        contact: state.contact.filter(({id}) => id !== action.payload),\r\n        loading: false,\r\n      };\r\n    },\r\n    [deleteThunkData.rejected]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default contactSlice.reducer;\r\n\r\nexport const contactFilter = createReducer(\"\", {\r\n   [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// export const contacts = createReducer([], {\r\n//   [getThunkData.fulfilled] : (state, action) =>  {\r\n//     return [...state, ...action.payload];\r\n//   },\r\n// });\r\n\r\n// export const loading = createReducer(false, {\r\n//   [getThunkData.pending]: (_, action) => true,\r\n//   [getThunkData.fulfilled]: (_, action) => false,\r\n//   [getThunkData.rejected]: (_, action) => false,\r\n// })\r\n\r\n// export const error = createReducer(null, {\r\n//   [getThunkData.rejected] : (_, action) =>  action.payload,\r\n// })\r\n\r\n//const initialState = [];\r\n\r\n// const contactList = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case \"contact/add\":\r\n//       return [...state, action.payload];\r\n\r\n//       case \"contact/delete\":\r\n//       return state.filter(contact => contact.id !== action.payload.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const contactList = createReducer(initialState, {\r\n//   \"contact/add\": (state, { payload }) => [...state, payload],\r\n//   \"contact/delete\": (state, { payload }) =>\r\n//     state.filter((contact) => contact.id !== payload),\r\n// });\r\n\r\n\r\n// const contactFilter = (state = \"\", action) => {\r\n//   return state;\r\n// };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactSlice, {  contactFilter } from \"./contacts/reducers\";\r\nimport logger from \"redux-logger\";\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer:{\r\n    contacts: contactSlice,\r\n    filter: contactFilter,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n    \r\n});\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n  {/* <PersistGate persistor = {persistor} loading = {null}> */}\n   <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2m88K\",\"button\":\"Form_button__A1L4H\",\"label\":\"Form_label__qENQy\",\"input\":\"Form_input__27BKL\"};"],"sourceRoot":""}